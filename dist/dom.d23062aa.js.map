{"version":3,"sources":["dom.js"],"names":["window","dom","create","str","container","document","createElement","innerHTML","trim","content","firstChild","after","node","nodeNext","parentNode","insertBefore","nextSibling","before","append","parent","child","appendChild","wrap","remove","removeChild","empty","x","arr","push","att","name","value","arguments","length","setAttribute","getAttribute","text","innerText","textContent","html","style","Objec","key","class","add","className","classList","has","contains","on","eventName","fn","addEventListener","off","removeEventListener","find","selector","scope","querySelectorAll","children","sibiling","list","i","next","nodeType","previous","previousSibling","each","call","index"],"mappings":"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","file":"dom.d23062aa.js","sourceRoot":"..\\src","sourcesContent":["window.dom = {\r\n  //增\r\n  create(str) {\r\n    const container = document.createElement(\"template\");\r\n    container.innerHTML = str.trim();\r\n    return container.content.firstChild;\r\n  },\r\n\r\n  after(node, nodeNext) {\r\n    node.parentNode.insertBefore(nodeNext, node.nextSibling);\r\n  },\r\n\r\n  before(node, nodeNext) {\r\n    node.parentNode.insertBefore(nodeNext, node);\r\n  },\r\n\r\n  append(parent, child) {\r\n    parent.appendChild(child);\r\n  },\r\n\r\n  wrap(child, parent) {\r\n    dom.before(child, parent);\r\n    dom.append(parent, child);\r\n  },\r\n\r\n  //删\r\n  remove(node) {\r\n    node.parentNode.removeChild(node);\r\n  },\r\n\r\n  empty(parent) {\r\n    const arr = [];\r\n    let x = parent.firstChild;\r\n    while (x) {\r\n      arr.push(dom.remove(x));\r\n      x = parent.firstChild;\r\n    }\r\n    return arr;\r\n  },\r\n\r\n  //改\r\n  att(node, name, value) {\r\n    if (arguments.length === 3) {\r\n      node.setAttribute(name, value);\r\n    } else if (arguments.length === 2) {\r\n      return node.getAttribute(name);\r\n    }\r\n  },\r\n\r\n  text(node, str) {\r\n    //适配\r\n    if (arguments.length === 2) {\r\n      if (\"innerText\" in node) {\r\n        node.innerText = str;\r\n      } else {\r\n        node.textContent = str;\r\n      }\r\n    } else if (arguments.length === 1) {\r\n      if (\"innerText\" in node) {\r\n        return node.innerText;\r\n      } else {\r\n        return node.textContent;\r\n      }\r\n    }\r\n  },\r\n\r\n  html(node, str) {\r\n    if (arguments.length === 2) {\r\n      node.innerHTML = str;\r\n    } else if (arguments.length === 1) {\r\n      return node.innerHTML;\r\n    }\r\n  },\r\n\r\n  style(node, name, value) {\r\n    if (arguments.length === 3) {\r\n      //div  color  red\r\n      node.style[name] = value;\r\n    } else if (arguments.length === 2) {\r\n      if (name instanceof Objec) {\r\n        for (let key in name) {\r\n          node.style[key] = name[key];\r\n        }\r\n      } else if (typeof name === \"string\") {\r\n        return node.style[name];\r\n      }\r\n    }\r\n  },\r\n  class: {\r\n    add(node, className) {\r\n      node.classList.add(className);\r\n    },\r\n    remove(node, className) {\r\n      node.classList.remove(className);\r\n    },\r\n    has(node, className) {\r\n      return node.classList.contains(className);\r\n    },\r\n  },\r\n  on(node, eventName, fn) {\r\n    node.addEventListener(eventName, fn);\r\n  },\r\n  off(node, eventName, fn) {\r\n    node.removeEventListener(eventName, fn);\r\n  },\r\n  find(selector, scope) {\r\n    return (scope || document).querySelectorAll(selector);\r\n  },\r\n  parent(node) {\r\n    return node.parentNode;\r\n  },\r\n  children(node) {\r\n    return node.children;\r\n  },\r\n  sibiling(node) {\r\n    let list = node.parentNode.children;\r\n    let arr = [];\r\n    for (let i = 0; i < list.length; i++) {\r\n      if (list[i] !== node) {\r\n        arr.push(list[i]);\r\n      }\r\n    }\r\n    return arr;\r\n  },\r\n  next(node) {\r\n    let x = node.nextSibling;\r\n    while (x && x.nodeType === 3) {\r\n      x = x.nextSibling;\r\n    }\r\n    return x;\r\n  },\r\n  previous(node) {\r\n    let x = node.previousSibling;\r\n    while (x && x.nodeType === 3) {\r\n      x = x.previousSibling;\r\n    }\r\n    return x;\r\n  },\r\n  each(node, fn) {\r\n    for (let i = 0; i < node.length; i++) {\r\n      fn.call(null, node[i]);\r\n    }\r\n  },\r\n  index(node) {\r\n    const list = dom.children(dom.parent(node));\r\n    let i;\r\n    for (i = 0; i < list.length; i++) {\r\n      if (list[i] === node) {\r\n        break;\r\n      }\r\n    }\r\n    return i;\r\n  },\r\n};\r\n"]}